// Finances Tracker Database Schema

Table users {
  id UUID [pk]
  email VARCHAR [not null, unique]
  password_hash VARCHAR [not null]
  first_name VARCHAR
  last_name VARCHAR
  created_at TIMESTAMP [not null, default: `now()`]
  updated_at TIMESTAMP [not null, default: `now()`]
}

Table transactions {
  id UUID [pk]
  user_id UUID [not null, ref: > users.id]
  amount DECIMAL(12,2) [not null]
  type ENUM('income', 'expense') [not null]
  description TEXT
  category_id UUID [ref: > categories.id]
  goal_id UUID [null, ref: > goals.id]
  envelope_id UUID [null, ref: > envelopes.id]
  transaction_date TIMESTAMP [not null, default: `now()`]
  created_at TIMESTAMP [not null, default: `now()`]
  updated_at TIMESTAMP [not null, default: `now()`]
  
  // A transaction can be linked to either a goal or an envelope, but not both
  constraint check_goal_or_envelope check (
    (goal_id IS NOT NULL AND envelope_id IS NULL) OR
    (goal_id IS NULL AND envelope_id IS NOT NULL) OR
    (goal_id IS NULL AND envelope_id IS NULL)
  )
}

Table categories {
  id UUID [pk]
  name VARCHAR [not null]
  type ENUM('income', 'expense') [not null]
  icon VARCHAR
  color VARCHAR
  created_at TIMESTAMP [not null, default: `now()`]
  updated_at TIMESTAMP [not null, default: `now()`]
}

Table goals {
  id UUID [pk]
  name VARCHAR [not null]
  description TEXT
  target_amount DECIMAL(12,2) [not null]
  current_amount DECIMAL(12,2) [not null, default: 0]
  deadline_date DATE
  is_completed BOOLEAN [not null, default: false]
  created_by_user_id UUID [not null, ref: > users.id]
  created_at TIMESTAMP [not null, default: `now()`]
  updated_at TIMESTAMP [not null, default: `now()`]
}

// Junction table for the many-to-many relationship between users and goals
Table user_goals {
  id UUID [pk]
  user_id UUID [not null, ref: > users.id]
  goal_id UUID [not null, ref: > goals.id]
  role ENUM('owner', 'contributor') [not null, default: 'contributor']
  created_at TIMESTAMP [not null, default: `now()`]
  updated_at TIMESTAMP [not null, default: `now()`]
  
  // Enforce uniqueness for user-goal pairs
  indexes {
    (user_id, goal_id) [unique]
  }
}

Table envelopes {
  id UUID [pk]
  name VARCHAR [not null]
  description TEXT
  current_amount DECIMAL(12,2) [not null, default: 0]
  created_by_user_id UUID [not null, ref: > users.id]
  created_at TIMESTAMP [not null, default: `now()`]
  updated_at TIMESTAMP [not null, default: `now()`]
}

// Junction table for the many-to-many relationship between users and envelopes
Table user_envelopes {
  id UUID [pk]
  user_id UUID [not null, ref: > users.id]
  envelope_id UUID [not null, ref: > envelopes.id]
  role ENUM('owner', 'contributor') [not null, default: 'contributor']
  created_at TIMESTAMP [not null, default: `now()`]
  updated_at TIMESTAMP [not null, default: `now()`]
  
  // Enforce uniqueness for user-envelope pairs
  indexes {
    (user_id, envelope_id) [unique]
  }
}

// For invitations to shared goals/envelopes
Table invitations {
  id UUID [pk]
  sender_id UUID [not null, ref: > users.id]
  recipient_email VARCHAR [not null]
  entity_type ENUM('goal', 'envelope') [not null]
  entity_id UUID [not null] // Either goal_id or envelope_id
  status ENUM('pending', 'accepted', 'declined') [not null, default: 'pending']
  created_at TIMESTAMP [not null, default: `now()`]
  expires_at TIMESTAMP [not null]
}

// Notifications for users
Table notifications {
  id UUID [pk]
  user_id UUID [not null, ref: > users.id]
  title VARCHAR [not null]
  message TEXT [not null]
  type ENUM('goal_progress', 'envelope_update', 'invitation', 'system') [not null]
  is_read BOOLEAN [not null, default: false]
  related_entity_type VARCHAR
  related_entity_id UUID
  created_at TIMESTAMP [not null, default: `now()`]
}
